@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@using Microsoft.AspNetCore.Http;
@inject IHttpContextAccessor HttpContextAccessor
@using OnlineBookStore.Utility;

<ul class="navbar-nav">
    @if (HttpContextAccessor.HttpContext.Session.GetInt32(StaticDetails.sshoppingCart) != null)
    {
        <li style="color:white;">
            <a asp-area="Customer" asp-controller="Cart" asp-action="Index" class="nav-link">
                @{
                    var count = HttpContextAccessor.HttpContext.Session.GetInt32(StaticDetails.sshoppingCart);
                }
                <i class="fas fa-shopping-cart"></i> &nbsp; (@count)
            </a>
        </li>
    }
    else
    {
        <li style="color:white;">
            <a href="#" class="nav-link">
                <i class="fas fa-shopping-cart"></i> &nbsp; (0)
            </a>
        </li>
    }
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link text-white" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">@await Component.InvokeAsync("UserName")</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link">Logout</button>
            </form>
        </li>
    }
    else
    {

        <li class="nav-item">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
